apply plugin: 'java'
apply plugin: 'jacoco'
apply plugin: 'findbugs'
apply plugin: 'checkstyle'
apply plugin: 'pmd'

sourceCompatibility = 1.7
version = '1.0'

repositories {
    mavenCentral()
}

dependencies {
    /**
     *  For doing the code more readable, please keep the elements in the file sorted alphabetically:
     *  - type (addon/plugin)
     *  - layer name
     *  - name
     */
    compile project(':fermat-api')
    compile project(':fermat-core-api')
    compile project(':fermat-wpd-plugin-engine-app-runtime-bitdubai')
    //    compile project(':fermat-wpd-plugin-identity-publisher-bitdubai')
    //    compile project(':fermat-wpd-plugin-middleware-wallet-factory-bitdubai')
    //    compile project(':fermat-wpd-plugin-middleware-wallet-publisher-bitdubai')
    //    compile project(':fermat-wpd-plugin-middleware-wallet-settings-bitdubai')
    compile project(':fermat-wpd-plugin-middleware-wallet-store-bitdubai')
    compile project(':fermat-wpd-plugin-network-service-wallet-community-bitdubai')
    compile project(':fermat-wpd-plugin-network-service-wallet-resources-bitdubai')
    //    compile project(':fermat-wpd-plugin-network-service-wallet-statistics-bitdubai')
    //    compile project(':fermat-wpd-plugin-network-service-wallet-store-bitdubai')
    //    compile project(':fermat-wpd-plugin-sub-app-module-wallet-factory-bitdubai')
    //    compile project(':fermat-wpd-plugin-sub-app-module-wallet-publisher-bitdubai')
    //    compile project(':fermat-wpd-plugin-sub-app-module-wallet-store-bitdubai')
    // todo create this plugin in ccp
    compile project(':fermat-wpd-plugin-middleware-wallet-manager-bitdubai')
    compile project(':fermat-wpd-plugin-desktop-module-wallet-manager-bitdubai')
    testCompile 'junit:junit:4.11'
}

pmd {
    toolVersion = '5.1.3'
}

tasks.withType (FindBugs) {
    reports {
        xml.enabled = false
        html.enabled = true
    }
}

task wpdFatJar(type: Jar) {
    manifest {
        attributes 'Implementation-Title': 'Gradle Jar File Example',
                'Implementation-Version': version
    }
    baseName = project.name + '-all'

    from { configurations.compile.collect { it.isDirectory() ? it : zipTree(it) } }
    with jar
}

def jacocoHtmlReport = ""

jacocoTestReport{
    reports{
        jacocoHtmlReport = "Code Coverage HTML Report: file://" + html.destination + "/index.html"
    }
}

task testCoverage(dependsOn: jacocoTestReport) << {
    println jacocoHtmlReport
}

jacocoTestReport.dependsOn clean, test
jacocoTestReport.mustRunAfter test
test.mustRunAfter clean

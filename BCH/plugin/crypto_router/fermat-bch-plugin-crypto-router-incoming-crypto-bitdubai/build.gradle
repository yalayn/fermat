apply plugin: 'java'
apply plugin: 'maven'
apply plugin: 'findbugs'
apply plugin: 'checkstyle'
apply plugin: 'pmd'
apply plugin: 'jacoco'

group = "com.bitdubai.fermat.cry"
sourceCompatibility = 1.7
version = '1.1.0'

configurations {
  deployerJars
}

jar {
    manifest {
        attributes 'Implementation-Title': 'fermat-cry-plugin-transaction-incoming-crypto',
                   'Implementation-Version': '1.1.0'
    }
}

repositories {
    mavenCentral ()
    maven {
	url "https://repository-fermat.forge.cloudbees.com/release/"
		credentials {
			username 'bitdubai.repo'
			password 'bud@pestdcd16c'
		}
    }
}

pmd {
    toolVersion = '5.1.3'
}

dependencies {
    //compile project(':fermat-api')
    //compile project(':fermat-pip-api')
    deployerJars "org.apache.maven.wagon:wagon-webdav:1.0-beta-2"
    testCompile 'junit:junit:4.11'
    testCompile 'org.easytesting:fest-assert-core:2.0M10'
    testCompile 'com.googlecode.catch-exception:catch-exception:1.2.0'
    compile project(':fermat-bch-api')
}

test {
    systemProperties 'property': 'value'
}

uploadArchives {
    repositories {
        flatDir {
            dirs 'repos'
        }
            mavenDeployer {
            configuration = configurations.deployerJars  
            repository (url: "dav:https://repository-fermat.forge.cloudbees.com/release/") {
                authentication(userName: 'bitdubai.repo', password: 'bud@pestdcd16c')
            }
        }
    }
}

tasks.withType(FindBugs) {
    reports {
        xml.enabled = false
        html.enabled = true
    }
}

def jacocoHtmlReport = ""

jacocoTestReport{
    reports{
        jacocoHtmlReport = "Code Coverage HTML Report: file://" + html.destination + "/index.html"
    }
}

task testCoverage(dependsOn: jacocoTestReport) << {
    println jacocoHtmlReport
}


jacocoTestReport.dependsOn clean, test
jacocoTestReport.mustRunAfter test
test.mustRunAfter clean

